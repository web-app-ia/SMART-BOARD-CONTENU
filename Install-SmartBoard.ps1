# ================================================
# SMART BOARD - INSTALLATION AUTOMATIQUE
# Script d'installation et configuration
# Version: 1.0.0
# ================================================

param(
    [string]$InstallPath = "$env:USERPROFILE\smart-board-app",
    [switch]$Force
)

function Write-ColoredOutput {
    param(
        [string]$Message,
        [string]$Color = "White"
    )
    Write-Host $Message -ForegroundColor $Color
}

function Test-AdminPrivileges {
    $currentUser = [Security.Principal.WindowsIdentity]::GetCurrent()
    $principal = New-Object Security.Principal.WindowsPrincipal($currentUser)
    return $principal.IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)
}

function Install-SmartBoard {
    Write-ColoredOutput "================================================" "Cyan"
    Write-ColoredOutput "    SMART BOARD - INSTALLATION AUTOMATIQUE" "Cyan"
    Write-ColoredOutput "================================================" "Cyan"
    Write-ColoredOutput ""
    
    # V√©rification des privil√®ges administrateur
    if (-not (Test-AdminPrivileges)) {
        Write-ColoredOutput "‚ö†Ô∏è  Privil√®ges administrateur requis !" "Red"
        Write-ColoredOutput "Veuillez relancer ce script en tant qu'administrateur." "Yellow"
        exit 1
    }
    
    Write-ColoredOutput "‚úì Privil√®ges administrateur confirm√©s" "Green"
    
    # Cr√©ation du r√©pertoire d'installation
    Write-ColoredOutput "üìÅ Cr√©ation du r√©pertoire d'installation..." "White"
    $SmartBoardPath = Join-Path $InstallPath "SMART_BOARD_Apps"
    
    if ((Test-Path $SmartBoardPath) -and -not $Force) {
        Write-ColoredOutput "‚ö†Ô∏è  Le r√©pertoire existe d√©j√†: $SmartBoardPath" "Yellow"
        Write-ColoredOutput "Utilisez -Force pour forcer l'installation" "Yellow"
        exit 1
    }
    
    if (Test-Path $SmartBoardPath) {
        Remove-Item $SmartBoardPath -Recurse -Force
    }
    
    New-Item -ItemType Directory -Path $SmartBoardPath -Force | Out-Null
    Write-ColoredOutput "‚úì R√©pertoire cr√©√©: $SmartBoardPath" "Green"
    
    # Copie des fichiers d'application
    Write-ColoredOutput "üì¶ Copie des applications..." "White"
    
    $Categories = @("body_tracking", "gestures", "R√©alit√© virtuelle", "resources", "voice_assistant", "whiteboards")
    
    foreach ($Category in $Categories) {
        if (Test-Path $Category) {
            $DestPath = Join-Path $SmartBoardPath $Category
            Copy-Item $Category $DestPath -Recurse -Force
            Write-ColoredOutput "  ‚úì Copi√©: $Category" "Green"
        }
    }
    
    # Copie des fichiers de configuration
    Write-ColoredOutput "‚öôÔ∏è  Installation des configurations..." "White"
    
    if (Test-Path "config") {
        $ConfigPath = Join-Path $InstallPath "config"
        Copy-Item "config" $ConfigPath -Recurse -Force
        Write-ColoredOutput "  ‚úì Configurations copi√©es" "Green"
    }
    
    # Cr√©ation des scripts de lancement globaux
    Write-ColoredOutput "üöÄ Cr√©ation des scripts de lancement..." "White"
    
    $LaunchScriptsPath = Join-Path $InstallPath "launch_scripts"
    New-Item -ItemType Directory -Path $LaunchScriptsPath -Force | Out-Null
    
    # Copie du template et du manager
    if (Test-Path "templates") {
        Copy-Item "templates" (Join-Path $InstallPath "templates") -Recurse -Force
    }
    
    if (Test-Path "SmartBoard-Manager.ps1") {
        Copy-Item "SmartBoard-Manager.ps1" $InstallPath -Force
    }
    
    Write-ColoredOutput "‚úì Scripts de lancement cr√©√©s" "Green"
    
    # Cr√©ation du script de mise √† jour
    $UpdateScriptPath = Join-Path $InstallPath "Update-SmartBoard.ps1"
    $UpdateScriptContent = @"
# Script de mise √† jour Smart Board
param([string]`$Source = "https://github.com/web-app-ia/SMART-BOARD-CONTENU.git")

Write-Host "Mise √† jour Smart Board..." -ForegroundColor Cyan
Write-Host "Source: `$Source" -ForegroundColor Yellow

# Ici vous pouvez ajouter la logique de mise √† jour
# Par exemple, cloner le repository et copier les nouveaux fichiers

Write-Host "Mise √† jour termin√©e !" -ForegroundColor Green
"@
    
    Set-Content -Path $UpdateScriptPath -Value $UpdateScriptContent -Encoding UTF8
    Write-ColoredOutput "‚úì Script de mise √† jour cr√©√©" "Green"
    
    # Finalisation
    Write-ColoredOutput "" "White"
    Write-ColoredOutput "================================================" "Cyan"
    Write-ColoredOutput "    INSTALLATION TERMIN√âE AVEC SUCC√àS !" "Cyan"
    Write-ColoredOutput "================================================" "Cyan"
    Write-ColoredOutput "" "White"
    Write-ColoredOutput "üìç R√©pertoire d'installation: $InstallPath" "White"
    Write-ColoredOutput "üìÅ Applications: $SmartBoardPath" "White"
    Write-ColoredOutput "‚öôÔ∏è  Configuration: $(Join-Path $InstallPath "config")" "White"
    Write-ColoredOutput "" "White"
    Write-ColoredOutput "üéØ Prochaines √©tapes:" "Yellow"
    Write-ColoredOutput "  1. Lancez Smart Board App depuis le r√©pertoire principal" "White"
    Write-ColoredOutput "  2. Testez les diff√©rentes applications" "White"
    Write-ColoredOutput "  3. Consultez la documentation sur GitHub" "White"
    Write-ColoredOutput "" "White"
}

# Ex√©cution
Install-SmartBoard
